1. 
java jdk bin 폴더에서 ...

2. 키스토어 생성
keytool -genkey -alias [ keystore 별칭 ] -keyalg RSA -keystore [keystore 파일 이름]
keytool -genkey -alias sample_alias -keyalg RSA -keystore sample_keystore

3. 키스토어로 인증서 생성
keytool -certreq -alias [별칭] -keyalg rsa -file [파일 이름] -keystore [keystore 파일 이름]
keytool -certreq -alias sample_alias -keyalg rsa -file sample_filename -keystore sample_keystore

4. Tomcat 8.5\conf 의 server.xml에 ..

5. server.xml 설정 (인증서 파일이 아닌 키스토어파일)
<Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
  maxThreads="150" SSLEnabled="true" keystoreFile="키스토어 경로" 
  keystorePass="키스토어 비번" scheme="https" secure="true"  clientAuth="false" sslProtocol="TLS"  />

<Connector port="8443" protocol="org.apache.coyote.http11.Http11NioProtocol"
  maxThreads="150" SSLEnabled="true" keystoreFile="C:\IDE\Projects\spring-workspace\keystore\sample_keystore" 
  keystorePass="123456" scheme="https" secure="true"  clientAuth="false" sslProtocol="TLS"  />

6. eclipse server 설정 => port에 ssl 포트 등록 확인 (안 보이면 server 다시 추가)

7. 스프링 시큐리티 설정
        <!-- Spring Security -->
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-web</artifactId>
            <version>3.2.8.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.security</groupId>
            <artifactId>spring-security-config</artifactId>
            <version>3.2.8.RELEASE</version>
        </dependency>

8. security-context.xml 작성

<?xml version="1.0" encoding="UTF-8"?>
 
<beans:beans
    xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
           http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security-3.2.xsd">
 
    <http auto-config='true' use-expressions="true">
        <intercept-url pattern="/**" requires-channel="https" access="permitAll" />
        <!-- enable csrf protection -->
        <!-- <csrf /> -->
    </http>
    <authentication-manager>
        <!-- <authentication-provider>
            <user-service>
                <user name="master" password="kim1234" authorities="ROLE_USER" />
            </user-service>
        </authentication-provider> -->
    </authentication-manager>
</beans:beans>
 
9. web.xml 필터 추가

    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
    <security-constraint>
        <web-resource-collection>
            <web-resource-name>my-secure-app</web-resource-name>
            <url-pattern>/*</url-pattern>
        </web-resource-collection>
        <user-data-constraint>
            <transport-guarantee>CONFIDENTIAL</transport-guarantee>
        </user-data-constraint>
    </security-constraint>

10. pom.xml => properties의 org.springframework-version 변경

	<properties>
		<!-- ### 버전 변경 ### -->
		<java-version>1.8</java-version>
		<org.springframework-version>5.0.8.RELEASE</org.springframework-version>
		<org.aspectj-version>1.6.10</org.aspectj-version>
		<org.slf4j-version>1.6.6</org.slf4j-version>
	</properties>